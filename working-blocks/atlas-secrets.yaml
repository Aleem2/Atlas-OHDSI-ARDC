# using the following command to generate Atlas secrets for various databases. 
# kubectl -n ohdsi create secret generic atlas-secrets --from-literal=ohdsi-admin-user=admin1 --from-literal=ohdsi-app-user=app1 --from-literal=postgres-password=admin1 --from-literal=webapi-sa=webapi-sa1
# Alternatively use the following command to generate the yaml file and later apply it. 
# kubectl -n ohdsi create secret generic atlas-secrets --from-literal=ohdsi-admin-user=admin1 --from-literal=ohdsi-app-user=app1 --from-literal=postgres-password=admin1 --from-literal=webapi-sa=webapi-sa1 --dry-run -oyaml
# Question is what passwords and user names are needed. 
# Atlas --no passwords
# Postgres
          #- name: POSTGRES_PASSWORD (optional)
          #  value: admin1
          #    ALTER ROLE ohdsi_admin_user WITH PASSWORD 'admin1'; ** and it sits in init script file. 
          #    ALTER ROLE ohdsi_app_user WITH PASSWORD 'app1'; ** and it sits in init script file. 
# Webapi
      #         - name: DATASOURCE_USERNAME 
       #   value: ohdsi_admin_user  ** this is repeat and required. Env variables. 
       # - name: DATASOURCE_PASSWORD
       #   value: admin1
       #        - name: FLYWAY_DATASOURCE_PASSWORD ** this is repeat and required. Env variables. 
       #   value: admin1

# usernames and passwords needed. I will mark it with **. Also mention requirements. 
# there is a script add CDM database and it has its own passwords. 
# kubectl create secret generic atlas-secrets --from-literal=POSTGRES_PASSWORD=admin1 --from-literal=ohdsi_admin_user=admin1 --from-literal=FLYWAY_DATASOURCE_PASSWORD=admin1 --from-literal=ohdsi_app_user=app1 --dry-run -oyaml
# What next 

#-------------------
# Using secrets set as env variables to set passwords.
#You can store the result of a shell command inside a psql variable like this:

#\set afile `echo "$outputdir/a.csv"`
#COPY (SELECT * FROM a) TO :'afile';
# kubectl create secret generic atlas-secrets --from-literal=postgres-password=admin1 --from-literal=ohdsi-admin-user=admin1 --from-literal=ohdsi-app-user=app1 --from-literal=webapi_sa=webapi_sa1 --dry-run -oyaml
#------------------------webapi_sa 

apiVersion: v1
data:
  ohdsi-admin-user: YWRtaW4x
  ohdsi-app-user: YXBwMQ==
  postgres-password: YWRtaW4x
  webapi-sa: d2ViYXBpX3NhMQ==
kind: Secret
metadata:
  creationTimestamp: null
  name: atlas-secrets
  namespace: ohdsi